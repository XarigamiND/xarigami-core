This file contains summaries of *ALL* changes we made to adodb library,
please keep this file up to date when making changes to the library
so we have an easy cheatsheet when upgrading and have a document ready
when we want things merged into the upstream code.

=============================================================
Diff of all Xarigami changes from 5.18a /Lion

1. Deleted from ADOdb distro
    ./server.php
    ./replicate (dir)
    ./drivers/adodb-text.inc.php
    ./pear/auth_adodb_example.php
3. Add empty "index.html" file to all dirs
4. Move docs files to "docs" subdir from root
6. Xaraya's own drivers were added
    ./drivers: adodb-xarmssql.inc.php
    ./drivers: adodb-xarmysqli.inc.php
    ./drivers: adodb-xarmysql.inc.php
    ./drivers: adodb-xaroci8.inc.php
    ./drivers: adodb-xarpostgres64.inc.php
    ./drivers: adodb-xarpostgres7.inc.php
    ./drivers: adodb-xarpostgres8.inc.php
    ./drivers: adodb-xarpostgres.inc.php
    ./drivers: adodb-xarsqlite.inc.php
7. Xaraya only files
    xartests dir
    xarchanges.txt (this file)
8. Differing files:
    ./adodb.inc.php
    ./drivers/adodb-mysqli.inc.php
    ./drivers/adodb-mysql.inc.php
    ./drivers/adodb-postgres64.inc.php
    ./drivers/adodb-postgres9.inc.php (whitespace change only)
    ./drivers/adodb-sqlite.inc.php

./adodb.inc.php
    - Just what's added to Lion's branch already 
    - (constructor name be __construction(), deprecated each() function removed)
    
./drivers/adodb-mysql.inc.php
    - changed MetaDatabases() function because it was deprecated

./drivers/adodb-mysqli.inc.php
    - MetaColumns() function fix: "makes sure the database is selected"

./drivers/adodb-postgres64.inc.php
    - Added: set bytea_output='escape' (whatever that is)

./drivers/adodb-sqlite.inc.php
    - MetaIndexes() "to fix return values of indexes in Metaindexes"

=============================================================
Changes made to ADOdb library in this Xarigami 1.4.x series onward
=============================================================
2012-08-21  Update to ADOdb version 5.1.8a
            //fix for mysqli MetaTables - make sure the db is selected
        line: 599 insert    $this->_findschema($table,$schema);
		if ($schema) {
			$dbName = $this->database;
			$this->SelectDB($schema);
		}

2012-10-20  Fix for deprecated mysql functions
            html/lib/adodb/drivers/adodb-mysql.inc.php
            line 311: function MetaDatabases()  see inline change doc
                //start xarigami change for deprecated functions
                //$qid = mysql_list_dbs($this->_connectionID);
                $qid = mysql_query("SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA",$this->_connectionID);
                $arr = array();
                $i = 0;
                $max = mysql_num_rows($qid);

                /*while ($i < $max) {
                    $db = mysql_tablename($qid,$i); //deprecated
                    if ($db != 'mysql') $arr[] = $db;
                    $i += 1;
                }*/
                while ($db = mysql_fetch_assoc($qid))
                {
                    if ($db != 'mysql') $arr[] = $db['SCHEMA_NAME'];
                }
                //end xarigami change for deprecated functions
                return $arr;
2012-08-21  Update to ADOdb version 5.1.7
             Check that server.php is removed.

2012-01-25  Update to ADOdb version 5.1.5
             Check that server.php is removed.

2011-09-09  Update to ADOdb version 5.1.4
             Check that server.php is removed.

2011-07-12  adodb-postgres64.inc.php line 695
            Replace: $this->Execute("set datestyle='ISO'");
            With: $this->Execute("set datestyle='ISO';set bytea_output='escape'");
2011-06-28  adodb-sqlite.inc.php - insert after line 300 to fix return values of indexes in Metaindexes
            line 300 : array_pop($cols);
                /* Xarigami fix */
                if (isset($cols[0]) && is_string($cols[0])){
                    $cols = explode(",",$cols[0]);
                }
                /* End Xarigami fix */
2011-06-20: mssqlnative.inc.php lines 489 and 494 function calls and UnixDate UnixTimeStamp is incorrect.
            Substitute "ADORecordSet_array_mssqlnative:" (now in Upstream version)

           adodb.inc.php line 3450 getrowassoc: (now in Upstream version)
                        if( isset( $this->fields[$v] ) ) {
                            $record[$k] = $this->fields[$v];
                        } else {
                            $record[$k] = $this->fields[$k];
                        }
                        // NOT $record[$k] = $this->fields[$v];
=============================================================
Changes made to ADOdb library in this Xarigami 1.2.x series onward
=============================================================
2011-04-26: Remove information exposing file paths when there is a missing file
            adodb.inc.php Line 4119

2010-12-16: Update adodb version in repo to 5.1.1
            Check that server.php is removed.
            adodb-mysqli.inc.php line 52 - set constructor var $optionFlags = array();
                        - originally setting causing corrupt value possibly related to charset
            adodb.inc.php line 944 function Execute -> function &Execute //for backward compat


=============================================================
Changes made to ADOdb library in this Xarigami 1.1.x series
=============================================================
2010-04-28: Update adodb version in repo to 5.1
            Check that server.php is removed.

2009-11-03: Update adodb version in repo to 5.09a
            Check that server.php is removed.

2009-08-14: Adjust  adodb.inc.php for php5.3 deprecated ini directives
                    adodb-perf.inc.php
                    adodb-xmlschema.inc.php
                    adodb-xmlschema03
                    adodb-datadict.inc.php
                    adodb-informix72.inc.php
                    adodb-ldap.inc.php
                    adodb-postgres64.inc.php
2009-06-28: Adjust adodb-xarsqlite.inc.php to correctly handle table deletion

2009-04-18: Update adodb version in repo to 5.08
            Make sure server.php is removed.
2008-07-11: Update adodb version in repo to 5.06a
            Make sure server.php is removed.
            PHP4 is no longer supported with this version
2008-07-11: Update adodb version in repo to 4.99
            Make sure server.php is removed.
2008-02-13: Update adodb version in repo to 4.98
            Make sure server.php is removed.
2007-09-27: Update adodb version in repo to 4.96
            Make sure server.php is removed.

2007-05-21: Update adodb version in repo to 4.95a
            Make sure server.php is removed.

2007-02-25: Update adodb version in repo to 4.94
            Make sure server.php is removed.
2006-11-21: Update adodb version in repo to 4.93a
            Make sure server.php is removed.

2006-07-02: Update adodb version in repo to 4.90
            Removed server.php [Bug 5233]
            No other changes applied, the sqlite files retained as per prior notes for this 1.1.x series

2006-03-05:
        drivers/adodob-xarsqlite.inc.php:
                override the recordset class too, the associative
                returns of sqlite somehow include the table name
                (only observed when aliased in the query, since not
                many modules use GetRowAssoc() ) (cfr. mime module )

2006-02-19: Current adodb version in repo: 4.71-1
            None of the specific xaraya changes in the 1.0.x series
            have been made at this stage. Only xaraya class extension
            files and xartests directory added, and this xarchanges.txt file.
            1.0.x series changes have been left for reference.

            html/xaradodb/datadict/datadict-sqlite.inc.php is our file
            and retained for this series.

File removal: server.php [Bug 5233] Xaraya Directory Traversal Vulnerability


=============================================================
Changes made to ADOdb library ONLY in the Xaraya 1.0.x series
=============================================================
adodb.inc.php, line 765-773:

        // XARAYA MODIFICATION - START
        if (xarCore::isDebugFlagSet(XARDBG_SQL)) {
            global $xarDebug_sqlCalls;
            $xarDebug_sqlCalls++;
            // initialise time to render by proca
            $lmtime = explode(' ', microtime());
            $lstarttime = $lmtime[1] + $lmtime[0];
        }
        // XARAYA MODIFICATION - END

adodb.inc.php, lines 838 - 846:

           // XARAYA MODIFICATION - START
            //  time to render SQL by proca
            if (xarCore::isDebugFlagSet(XARDBG_SQL)) {
                $lmtime = explode(" ", microtime());
                $lendtime = $lmtime[1] + $lmtime[0];
                $ltotaltime = ($lendtime - $lstarttime);
                xarLogMessage("Query ($ltotaltime Seconds): ".$sql);
            }
            // XARAYA MODIFICATION - END

adodb.inc.php, lines 868-876:

        // XARAYA MODIFICATION - START
        //  time to render SQL by proca
        if (xarCore::isDebugFlagSet(XARDBG_SQL)) {
            $lmtime = explode(" ", microtime());
            $lendtime = $lmtime[1] + $lmtime[0];
            $ltotaltime = ($lendtime - $lstarttime);
            xarLogMessage("Query ($ltotaltime Seconds): ".$sql);
        }
        // XARAYA MODIFICATION - END

Reason:
        Gathering xaraya specific debug information
        when the sql debug flag is set
        Changes were made by proca (2001-2002)

Upstream:
        No, xaraya specific, not a general issue

Notes:
        - the 3 changes are not equal, the first counts the sqlCalls, the other two do not, intentional?
        - can we move this into a function in one place? easier to maintain.



adodb.inc.php lines 906- 920:

        // XARAYA MODIFICATION - START - TURN OFF/ON ERROR HANDLER
        // execute is allowed to fail getting the next sequence
        // as it will create it if it does not exist

        //$getnext = sprintf($this->_genIDSQL,$seqname);
        //$holdtransOK = $this->_transOK;
        //$rs = @$this->Execute($getnext);

        $errorfn = $this->raiseErrorFn;
        $this->raiseErrorFn = false;
        $getnext = sprintf($this->_genIDSQL,$seqname);
        $holdtransOK = $this->_transOK;
        $rs = $this->Execute($getnext);
        $this->raiseErrorFn = $errorfn;
        // XARAYA MODIFICATION - END - TURN OFF/ON ERROR HANDLER

Reason:
        ??
        Change was made by wb9tpg (Dec 23 15:49:28 2002)
        Comment: "Add ADODB exceptions"

Upstream:
        ??


drivers/adodb-postgres64.inc.php lines 84-96:
    // XARAYA MODIFICATION - START
    //var $_genIDSQL = "SELECT NEXTVAL('%s')";
    //var $_genSeqSQL = "CREATE SEQUENCE %s START %s";
    //var $_dropSeqSQL = "DROP SEQUENCE %s";
    // Prefix the sequence number to make it unique
    var $_genIDSQL = "SELECT NEXTVAL('seq%s')";
    var $_genSeqSQL = "CREATE SEQUENCE seq%s START %s";
    var $_dropSeqSQL = "DROP SEQUENCE seq%s";
    // XARAYA MODIFICATION - END

Reason:
        prefixing the sequence number (number?) to make it unique

        Change was made by wb9tpg (Mon Oct 28 02:07:59 2002)
        Comment: "Prefix the sequence number for postgers so
        it'll be different than the table name.
        It'll fail with adodb if they are the same."

Upstream:
        seems like a general issue, not sure


drivers/adodb-postgres64.inc.php lines 144-149:

        // XARAYA MODIFICATION - START
        //if (!is_resource($this->_resultid) || get_resource_type($this->_resultid) !== 'pgsql result') return false;
        //return pg_getlastoid($this->_resultid);
        // return the GenID value
        return $this->genID;
        // XARAYA MODIFICATION - END

Reason:
        ??
        Change was made by wb9tpg (Oct 29 00:52:44 2002)
        Comment: "Postgres Specific Updates"

Upstream:
        ??

drivers/adodb-postgres64.inc.php lines 580-584:

        // XARAYA MODIFICATION - START
        // XARAYA TO DO - find out why following line fails
        // $this->Execute("set datestyle='ISO'");
        // XARAYA MODIFICATION - END

Reason:
        the statement failed
        Change was made by wb9tpg (Mon Oct 28 02:07:59 2002)

Upstream:
        not literally i think, but once we know why it fails this seems like a general problem


drivers/adodb-oci8.inc.php lines 54-61:

    // XARAYA MODIFICATION - START
    //var $_genIDSQL = "SELECT (%s.nextval) FROM DUAL";
    //var $_genSeqSQL = "CREATE SEQUENCE %s START WITH %s";
    //var $_dropSeqSQL = "DROP SEQUENCE %s";
    var $_genIDSQL = "SELECT (seq%s.nextval) FROM DUAL";
    var $_genSeqSQL = "CREATE SEQUENCE seq%s START WITH %s";
    var $_dropSeqSQL = "DROP SEQUENCE seq%s";
    // XARAYA MODIFICATION - END

Reason:
        making the sequences unique?
        Change was made by rcave (Aug 18 18:07:34 2003)
        Comment: "Prefix Oracle sequence names with 'seq' as we do in PostgreSQL"

Upstream:
        ??


adodb-datadict.inc.php lines 16-24:

    // XARAYA MODIFICATION - START
    // Fallback function for ctype_alnum (necessary for some earlier versions of PHP)
    // This could be moved to a core script to allow support for other modules too.
    if (!function_exists('ctype_alnum')) {
        function ctype_alnum($text) {
            return preg_match('/^[a-z0-9]*$/i', $text);
        }
    }
    // XARAYA MODIFICATION - END

Reason:
        ctype_alnum function is not always present in php installs
        Change was made by judgej (Dec 29 22:17:35 2003)

Upstream:
        yes


adodb-datadict.inc.php lines 577-585:

        // XARAYA MODIFICATION - START
        // if (!$colarr) return $this->CreateTableSQL($tablename,$flds,$tableoptions);
        if (!$colarr) {
            if (xarExceptionId()) {
                xarExceptionHandled();
            }
            return $this->CreateTableSQL($tablename,$flds);
        }
        // XARAYA MODIFICATION - END

Reason:
        inserting exception code for xaraya

        Change was made by judgej (Nov 29 22:09:39 2003)
        Comment: "ChangeTableSQL() - handle Xaraya exception raised when table needs creating"

Upstream:
        no, xaraya specific


drivers/adodb-mysql.inc.php lines 28-31:

// XARAYA MODIFICATION - START
    //var $hasGenID = true;
    var $hasGenID = false;
// XARAYA MODIFICATION - END

Reason:
        legacy change, makes things easier for us
        Change was made by proca (Apr 13 23:09:17 2002)
        Comment: "Fix for GenID"

Upstream:
        no

drivers/adodb-mysql.inc.php lines 49-52:

// XARAYA MODIFICATION - START
        //$arr['description'] = $this->GetOne("select version()");
        $arr['description'] = ADOConnection::GetOne("select version()");
// XARAYA MODIFICATION - END

Reason:
        on versions 3 and 4 of mysql behaviour is different
        Change was made by judgej (Jan  1 12:35:48 2004)
        Comment: "neater solution: force use of parent object method"

Upstream:
        yes

        judgej: I'm pushing a change to this, as recommended by John Lim,
        that simply forces a fallback to the parent object. That particular
        change will be incorporated into future versions of ADODB.

drivers/adodb-mysql.inc.php lines 194-198:

        // XARAYA MODIFICATION - START
        // // post-nuke sets hasGenID to false
        //if (!$this->hasGenID) return false;
        if (!$this->hasGenID) return 0;
        // XARAYA MODIFICATION - END

Reason:
        legacy change?
        Change was made by proca (Apr 13 23:09:17 2002)
        Comment: "Fix for GenID"

Upstream:
        no


Misc changes:
        index.html was added to all cats
        Reason: security reason

        copy all icons from cute_icons_for_site/* to xaradodb
        Reason: legacy change


datadict/datadict-mssql.inc.php lines 127-137:

        // XARAYA MODIFICATION - START
        // We need support for DEFAULT ''
        //if (strlen($fdefault)) $suffix .= " DEFAULT $fdefault";
        if (strlen($fdefault)) {
            $suffix .= " DEFAULT $fdefault";
        } elseif (isset($fdefault) && $fdefault === '') {
            $suffix .= " DEFAULT ''";
        }
        // We use GenID() instead
        //if ($fautoinc) $suffix .= ' IDENTITY(1,1)';
        // XARAYA MODIFICATION - END

Reason:
    - IDENTITY and GenID() don't work well together
    - DEFAULT '' was not supported here, perhaps due to ADODB's weird
      datadict syntax : DEFAULT some value without quotes

Upstream:
    (?)


drivers/adodb-xarmssql.inc.php (new) :

    Increase .ini settings for mssql.textsize and mssql.textlimit
    GenID() and _insertid() replacement for adodb-mssql.inc.php
    Replace single spaces by empty strings again in query results


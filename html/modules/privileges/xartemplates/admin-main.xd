<xar:comment>License: GPL http://www.gnu.org/copyleft/gpl.html</xar:comment>
<div class="xar-mod-page">
    <div class="xar-mod-head">
        <xar:if condition="!xarRequestIsAJAX()">
            <xar:template type="module" module="base" file="admin-menu" />
        </xar:if>
    </div>
    <div class="xar-mod-body">
        <h1><xar:mlstring>Overview</xar:mlstring></h1>

        <div class="xar-mod-content">
            <img src="#xarTplGetImage('admin.png', 'privileges')#" alt="official icon" width="96" height="96" class="xar-module-icon" />
            <h2>
                <xar:mlstring>What is it?</xar:mlstring>
            </h2>

            <p>
                <xar:mlstring>The Privileges module lets you manage access rights on your site.  Privileges give roles access to certain resources of your choosing. They are the basic components of the security system.</xar:mlstring>
            </p>

            <p>
                <xar:mlstring>Here are some of the things you can do with privileges:</xar:mlstring>
            </p>

            <ul>
                <li><xar:mlstring>Xarigami's privileges are extremely flexible. You can define privileges at the level of site, realms, modules, component classes within modules, or single instances of those classes.</xar:mlstring>
                </li>
                <li>
                    <xar:mlstring>You can use privileges as building blocks. Assemble them into compound privileges tailored to any specific role on the site.</xar:mlstring>
                </li>
                <li>
                    <xar:mlstring>You can assign privileges to roles which then pass them on to their children in the roles hierarchy through inheritance.</xar:mlstring>
                </li>
                <li>
                    <xar:mlstring>Using the realms functionality you can subdivide one site into many "virtual" sites sharing the same resources.</xar:mlstring>
                </li>
            </ul>

            <h2>
                <xar:mlstring>How to use it?</xar:mlstring>
            </h2>

            <p>
                <xar:mlstring>Clicking on the <strong>View Privileges</strong> link gives you an overview of all the privileges on your system. Compound privileges are collapsed, but you can click on them to open them up and view their components.</xar:mlstring>
            </p>

            <p>
                <xar:mlstring>When adding or modifying a privilege, you can define it to have its own access rights, or simply to serve as a container for other privileges.</xar:mlstring>
            </p>

            <p>
                <xar:mlstring>Xarigami comes preconfigured with a minimal set of privileges that are loaded when you run the installer. These will vary according to the configuration you chose. Examples are:</xar:mlstring>
            </p>

            <ul>
                <li>
                    <xar:mlstring><strong>Administration</strong>: a privilege that gives a role complete access to all resources on the site. At installation this privilege is assigned to the role Administrators and is inherited by the user Admin.</xar:mlstring>
                </li>
                <li>
                    <xar:mlstring><strong>CasualAccess</strong>: this is the privilege assigned to unregistered users on the site. It is initially defined to allow viewing access of the front page, as well as access to the login block.</xar:mlstring>
                </li>
                <li>
                    <xar:mlstring><strong>GeneralLock</strong>: a privilege that restricts access to certain basic roles and privileges the system requires, such as the default admin. This is to avoid inadvertent removal.</xar:mlstring>
                </li>
            </ul>

            <p>
                <xar:mlstring>All privileges in the system can be changed or removed but it is recommended you do not remove the
                default and Locked privileges unless you are sure you understand what you are doing (for those protected by GeneralLock
                above this takes a bit more doing). You can also combine privileges by using them as elements to create
                compound privileges, or make new privileges of your choosing. There is no limit to the number of privileges
                you can create or their levels of nesting.</xar:mlstring>
            </p>
                <h3>
                <xar:mlstring>Level of Access</xar:mlstring>
            </h3>

            <p>
                <xar:mlstring>When you create a privilege you can assign one of a number of predefined levels of
                access for that privilege to a module, a component of that module, or an instance (eg an itemtype).
                A module author will determine how those levels are applied in their module. Generally they are:</xar:mlstring>
            </p>
            <ul>
                <li><xar:mlstring><em>None</em> : no access</xar:mlstring></li>
                <li><xar:mlstring><em>Overview</em> : access to some part of the content, but not full content. For example, in Articles module the overview access will allow viewing of article summaries but not full article display.</xar:mlstring></li>
                <li><xar:mlstring><em>Read</em> : full read access</xar:mlstring></li>
                <li><xar:mlstring><em>Comment</em> : allows a user to submit content eg Submit a document, submit a comment</xar:mlstring></li>
                <li><xar:mlstring><em>Moderate</em> : may vary from module to module but usually allows editing of other users' content</xar:mlstring></li>
                <li><xar:mlstring><em>Edit</em> : can edit content but not add or delete</xar:mlstring></li>
                <li><xar:mlstring><em>Add</em> : can add and edit but not delete</xar:mlstring></li>
                <li><xar:mlstring><em>Delete</em> : can delete content as well as add and edit</xar:mlstring></li>
                <li><xar:mlstring><em>Admin</em> : full administration access</xar:mlstring></li>
            </ul>
            <p>
                <xar:mlstring>Remember that you can assign privileges  to the <strong>Myself</strong> role, and those privileges will
                only apply to a specific user and the content owned or authored by that specific eg they could edit
                their own articles, or comments but not articles or comments created by others.</xar:mlstring>
            </p>
            <h3><a name="modifyconfig"></a><xar:mlstring>Privileges Configuration Settings</xar:mlstring></h3>
            <h4><a name="lastresort"></a><a name="modifyconfig"></a><xar:mlstring>Last Resort Admin</xar:mlstring>
            </h4>
            <p>
                <xar:mlstring><strong>Last Resort Administrator</strong> is a special Administrator that lies outside the
                roles and privileges system in Xarigami. The Last Resort Administrator can always access your site. Creation of
                a Last Resort administrator is optional by going to <strong>Privileges - Modify Config</strong> and checking the Last Resort option.</xar:mlstring></p>
                <p><xar:mlstring>
                    You will be prompted for a username for the Last Resort administrator and a password. If you do create a Last Resort administrator
                    be sure to protect the user name and password as this Admin will always be able to access the site irregardless of what happens to the site privileges.
                </xar:mlstring>
            </p>
            <h4><xar:mlstring>Realms</xar:mlstring></h4>
            <p>
                <xar:mlstring>
                Realms is a feature new in Xarigami 1.1. By activating Realms you will be prompted to specify a privilege
                mask that will be by privileges for testing whether a realm is current or not. In addition to the Realm definition,
                you will also be provided an additional Realms Management function to define realm names for your site.
                See </xar:mlstring><a href="http://xaraya.com/index.php/documentation/607"><xar:mlstring>Xarigami Realms</xar:mlstring></a><xar:mlstring> for more information.
                </xar:mlstring>
            </p>

            <h3>
                <xar:mlstring>Included Blocks</xar:mlstring>
            </h3>

            <p>
                <xar:mlstring>There are no included blocks.</xar:mlstring>
            </p>

            <h3>
                <xar:mlstring>Included Hooks</xar:mlstring>
            </h3>

            <p>
                <xar:mlstring>There are no included hooks.</xar:mlstring>
            </p>
           <h3><xar:mlstring>Further Information</xar:mlstring></h3>
           <p>
              <xar:mlstring>Further information on the Privileges module can be found at:</xar:mlstring>
           </p>
           <ul>
              <li><xar:mlstring>Privileges Module Extension page at</xar:mlstring> <a title="#xarML('Privileges  Module - Xaraya Extension 1098')#" href="http://www.xaraya.com/index.php/release/1098.html">Xarigami Extension and Releases</a>.
              <xar:mlstring> Click on Version History tab at the bottom to get the latest release information.</xar:mlstring>
              </li>
              <li><xar:mlstring>Related tutorials and documentation on Privileges module at</xar:mlstring> <a href="http://www.xaraya.com/index.php/keywords/privileges/" title="#xarML('Related documentation on Privileges')#"><xar:mlstring>Xarigami Documentation.</xar:mlstring></a>
              </li>
              <li><xar:mlstring>Extended information for Developers at</xar:mlstring> <a href="http://www.xaraya.com/documentation/rfcs/rfc0030.html" title="#xarML('RFC 30')#"><xar:mlstring>Xarigami RFC-30</xar:mlstring></a>
              </li>

          </ul>
          <p class="xar-sub">
            <strong>&nbsp;<xar:mlstring>Privileges  Module Overview</xar:mlstring></strong><br />&nbsp;<xar:mlstring>Version</xar:mlstring> 1.0.0&nbsp; 2006-05-03
          </p>
        </div>
    </div>
</div>
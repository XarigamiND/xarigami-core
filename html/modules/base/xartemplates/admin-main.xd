<xar:comment> License: GPL http://www.gnu.org/copyleft/gpl.html </xar:comment>
<div class="xar-mod-page">
    <div class="xar-mod-head">
        <xar:if condition="!xarRequestIsAJAX()">
            <xar:template type="module" module="base" file="admin-menu" />
        </xar:if>
    </div>
    <div class="xar-mod-body">
        <h1><xar:mlstring>Overview</xar:mlstring></h1>
            <img src="#xarTplGetImage('admin.png','base')#" alt="#xarML('official icon')#" width="96" height="96" class="xar-module-icon" />
        <div class="xar-mod-content">

            <h2><xar:mlstring>What is it?</xar:mlstring></h2>
            <p>
                <xar:mlstring>The base module provides overall site configuration and informational options in the Administration menu and provides a means to add custom static pages.
                It also serves as a collection of classes, custom block layout tags, include templates, and javascript functions that can be used throughout your site,
                as well as being the location of the system wide default css classes.</xar:mlstring></p>

            <h3><xar:mlstring>How to use it?</xar:mlstring></h3>

            <p><xar:mlstring>The Administration menu allows you to have control over various global aspects on your site and includes:</xar:mlstring></p>
                <ol>
                    <li><xar:mlstring>System Information: Allows you to view your server and php set-up for trouble shooting.</xar:mlstring></li>
                    <li><xar:mlstring>Extension Releases: View recently released extensions from the xarigami.com Extension and Release RSS feed.</xar:mlstring></li>
                    <li><xar:mlstring>Modify Config: Allows you to change some of the key settings controlling the core behaviour of the site.</xar:mlstring>
                         <ul>
                            <li><xar:mlstring>Default module providing display on your site's front page</xar:mlstring></li>
                            <li><xar:mlstring>Short URL Master switch</xar:mlstring></li>
                            <li><xar:mlstring>Languages, Locales and Security</xar:mlstring></li>
                            <li><xar:mlstring>Cookie settings, and other defaults such as WYSIWYG editor</xar:mlstring></li>
                         </ul>
                    </li>
                </ol>
                <h4><xar:mlstring>
                    The Others Tab
                    </xar:mlstring>
                </h4>
                <p>
                    <strong>
                        <xar:mlstring>
                            Timezone setting:
                        </xar:mlstring>
                    </strong>
                    <xar:mlstring>
                        Xarigami stores date/times in UTC. This timezone is used to calculate the time shown to users of your site. Note that you can have users choose their own timezone when you allow them to.
                    </xar:mlstring>
                </p>
            <h3><xar:mlstring>Included Blocks</xar:mlstring></h3>

            <ol>

                <li><p><strong><xar:mlstring>Admin menu - Adminpanels</xar:mlstring></strong>:
                <xar:mlstring>An Adminpanel block can be configured in a number of ways. After creating the Adminpanel Menu block instance you have the option of overriding the default sort order
                   and selecting sort by category or name. You can position the Adminmenu in any of the default blockgroups shipped in Xarigami such as left, or right. Alternatively create your own blockgroup
                   and add your Adminmenu block to it in the usual way (See the documentation on Blocks for more information).
                   You can also display an Admin logout link in the menu by checking the relevant option.</xar:mlstring>
                   </p>
                   <p><xar:mlstring>At the present time You can turn the <strong>HELP</strong> link on or off from this Adminpanel block configuration</xar:mlstring></p>
                </li>
                <li><p><strong><xar:mlstring>Waiting content</xar:mlstring></strong>:
                 <xar:mlstring>The block will display content waiting on approval for any modules that supply a hook for waiting content (eg Articles Module). To use it, create a Content Waiting block
                and then hook the Module supplying the hook to Base. For example, to display waiting content in Articles module, go to </xar:mlstring><a href="&xar-modurl-modules-admin-hooks;&amp;hook=articles"><xar:mlstring>Modules-Configure-Hooks and Click on Articles</xar:mlstring></a>.
                <xar:mlstring> Then make your way to Base radiobutton and check it to display any articles waiting approval in your Content Waiting block.</xar:mlstring>
                </p>
                </li>
                <li><xar:mlstring><strong>finclude</strong>: Include a file as block content.</xar:mlstring></li>
                <li><xar:mlstring><strong>html</strong>: Enter HTML as block content.</xar:mlstring></li>
                <li><xar:mlstring><strong>menu</strong>: Construct menus. The Base menu block provides three main display options. These include:</xar:mlstring>
                    <ul>
                        <li><xar:mlstring>Manual definition of link, title and URL for each menu item</xar:mlstring></li>
                        <li><xar:mlstring>Automatic display of all user menu options in active modules, for convenience.</xar:mlstring></li>
                        <li><xar:mlstring>Manual listing of modules for display of user menu items.</xar:mlstring></li>
                    </ul>

                    <p><xar:mlstring>You can use </xar:mlstring><a href="http://xaraya.com/index.php/documentation/522"><xar:mlstring>Xarigami shortcut URL syntax</xar:mlstring></a><xar:mlstring> for menu links that will automatically be
                       converted to full or short friendly urls, or use module aliases, depending on your overall Xarigami site install settings.</xar:mlstring></p>
                </li>
                <li><p><xar:mlstring><strong>php</strong>: Execute PHP code in a block.</xar:mlstring></p></li>
                <li><p><xar:mlstring><strong>text</strong>: Include plain text in a block.</xar:mlstring></p></li>

            </ol>
            <p><xar:mlstring><strong>Expire a Block</strong></xar:mlstring></p>

            <p>
                <xar:mlstring>Currently, the HTML and Text blocks can both expire content if you wish.  If you have a message that you would like to only have visible for a certain period of time, you can expire the block.  This functionality can be used in conjunction with any placement or block group that you assign the block.</xar:mlstring>
            </p>
            <h3><xar:mlstring>Included Hooks</xar:mlstring></h3>

            <p><xar:mlstring>The Base Module has no hooks included at this time.</xar:mlstring></p>
            <h3><xar:mlstring>Dynamic Data Properties</xar:mlstring></h3>

            <p><xar:mlstring>The Base Module provides a number of Dynamic Data properties that you can use to extend existing Xarigami functionality by hooking Dynamic Data to your modules, or for developers, for use in your own module development.</xar:mlstring></p>
            <h3><xar:mlstring>Custom Templates and Static Pages</xar:mlstring></h3>

            <p><xar:mlstring>As well as providing a means to provide a custom template for your front page by creating an override for the base user-main.xd template,
            you can also create further custom 'static' pages using base module templates. See the documentation for further information.</xar:mlstring></p>

            <h3><xar:mlstring>System Wide CSS</xar:mlstring></h3>

            <p><xar:mlstring>The system wide default CSS used by all core templates, and for use in module templates is found in the base module's <code>modules/base/xarstyles</code> directory along with other css used commonly throughout core and modules.</xar:mlstring></p>


            <h3><xar:mlstring>Custom Tags</xar:mlstring></h3>

            <p><xar:mlstring>The Base Module provides a number of custom tags that can be used by theme creators and module developers to incorporate javascript into templates. These include the <code>&lt;xar:base-render-javascript ... /&gt;, &lt;xar:base-include-javascript ... /&gt;</code> and <code>&lt;xar:base-trigger-javascript ... /&gt;</code> tags. </xar:mlstring></p>
            <p><xar:mlstring>You can use the javascript tags to include your own javascript or some of the library of javascript functions in the <code>modules/base/xartemplates/includes</code> directory. See the documentation for more information.</xar:mlstring></p>

            <h3><xar:mlstring>Privilege Masks</xar:mlstring></h3>

            <p><xar:mlstring>You can set privileges for this module based on the following included masks:</xar:mlstring></p>
                <ul>
                    <li>ViewBase</li>
                    <li>ReadBase</li>
                    <li>AdminBase</li>
                    <li>ViewBaseBlocks, ReadBaseBlocks, EditBaseBlocks, AddBaseBlocks, DeleteBaseBlocks, AdminBaseBlocks.</li>
                </ul>
            <p><xar:mlstring>See the documentation for further information on privileges, masks and configuring them in your system.</xar:mlstring></p>

            <h3><xar:mlstring>For Developers</xar:mlstring></h3>
            <p><xar:mlstring>The Base module contains a number of useful classes and miscellaneous functions including:</xar:mlstring></p>
            <ol>
                <li><xar:mlstring>RSS Class</xar:mlstring>
                 <p>
                   <xar:mlstring>The RSS capabilities in Xarigami use <a href="http://freshmeat.net/projects/phpfeedparser/?topic_id=914">PHP feedParser</a> as their backend.   The notes for the feedParser by Reverend Jim are as follows:</xar:mlstring>
                 </p>
                 <p>
                  <xar:mlstring>feedParser was created due to the lack of a good, flexible, class-based RSS feed parser for PHP. It has been built as a class, and currently handles RSS 0.91, RSS 0.92, RSS 0.93, RSS 1.0, and RSS 2.0 feeds. For channels it grabs the title, description, link, and creator. For items it grabs the title, description, link, and date. It also provides a form of the date converted into the local timezone to facilitate chronological sorting of items. The dates are provided in UNIX timestamp format for easy manipulation by other PHP functions. </xar:mlstring>
                 </p></li>
                 <li><xar:mlstring>Curl Class</xar:mlstring></li>
                <li><xar:mlstring>XML Parser Class</xar:mlstring></li>

            </ol>

            <h3>
                <xar:mlstring>Further Information</xar:mlstring>
            </h3>
            <p>
                <xar:mlstring>Further information on the Base module can be found at</xar:mlstring>
            </p>
               <ul>
                      <li><xar:mlstring>Base Module Extension page at</xar:mlstring> <a title="#xarML('Base Module - Xarigami Extension 68')#" href="http://www.xaraya.com/index.php/release/68.html">Xarigami Extension and Releases</a>.
                      <xar:mlstring> Click on Version History tab at the bottom to get the latest release information.</xar:mlstring>
                      </li>
                      <li><xar:mlstring>Related tutorials and documentation on Base Module found at</xar:mlstring> <a href="http://www.xaraya.com/index.php/keywords/base/" title="#xarML('Related documentation on Base')#"><xar:mlstring>Xarigami Documentation.</xar:mlstring></a>
                      </li>
                 </ul>
                 <p class="xar-sub">
                     <strong>&#160;<xar:mlstring>Base Module Overview</xar:mlstring></strong><br />&#160;<xar:mlstring>Version</xar:mlstring> 1.0.3&#160;2006-11-12
                 </p>
        </div>
    </div>
</div>
